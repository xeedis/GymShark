// <auto-generated />
using System;
using GymSharkAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymSharkAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220628165841_OrderEntityAdded")]
    partial class OrderEntityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("GymSharkAPI.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymSharkApi.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isMain")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("GymSharkApi.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GymSharkApi.Entities.ProductOrder", b =>
                {
                    b.Property<int>("SourceUsertId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderedProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SourceUsertId", "OrderedProductId");

                    b.HasIndex("OrderedProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GymSharkApi.Entities.Photo", b =>
                {
                    b.HasOne("GymSharkApi.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GymSharkApi.Entities.ProductOrder", b =>
                {
                    b.HasOne("GymSharkApi.Entities.Product", "OrderedProduct")
                        .WithMany("OrderedByUsers")
                        .HasForeignKey("OrderedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymSharkAPI.Entities.AppUser", "SourceUser")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("SourceUsertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderedProduct");

                    b.Navigation("SourceUser");
                });

            modelBuilder.Entity("GymSharkAPI.Entities.AppUser", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("GymSharkApi.Entities.Product", b =>
                {
                    b.Navigation("OrderedByUsers");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
